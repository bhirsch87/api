{
    "openapi": "3.0.1",
    "info": {
      "title": "PayStatementService.API",
      "version": "1.0"
    },
    "servers": [
      {
        "url": "/paystatementsvc"
      }
    ],
    "paths": {
      "/api/v1/paystatement/cicadmin/source-data/{fileId}/cic-approve": {
        "put": {
          "tags": [
            "CicAdmin"
          ],
          "summary": "CIC Administrator approval for an uploaded Pay Statement file",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "Unique identifier for file",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File approved"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File approved"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File approved"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/cicadmin/line-of-business-add/post-steps": {
        "post": {
          "tags": [
            "CicAdmin"
          ],
          "summary": "Save default transformation records for company new to Pay Statement line of business",
          "parameters": [
            {
              "name": "companyId",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Company Id": {
                      "value": {"success":false,"message":"CompanyId does not exist"}
                    },
                    "Line of Business error": {
                      "value": {"success":false,"message":"Company does not have Pay Statement line of business"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Company Id": {
                      "value": {"success":false,"message":"CompanyId does not exist"}
                    },
                    "Line of Business error": {
                      "value": {"success":false,"message":"Company does not have Pay Statement line of business"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Company Id": {
                      "value": {"success":false,"message":"CompanyId does not exist"}
                    },
                    "Line of Business error": {
                      "value": {"success":false,"message":"Company does not have Pay Statement line of business"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/most-recent": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets most recent pay statement for employee",
          "parameters": [
            {
              "name": "employeeId",
              "in": "query",
              "description": "Employee Id",
              "schema": {
                "type": "string"
              },
              "example": "JSmith6"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "default": "en-US"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Pdf file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "EmployeeId is required": {
                      "value": {"success":false,"message":"EmployeeId is required"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "EmployeeId is required": {
                      "value": {"success":false,"message":"EmployeeId is required"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "EmployeeId is required": {
                      "value": {"success":false,"message":"EmployeeId is required"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/{paystatementId}": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets a Pay Statement by Pay Statement Id",
          "parameters": [
            {
              "name": "paystatementId",
              "in": "path",
              "description": "Unique identifier for pay statement",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "default": "en-US"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Pdf file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Insufficient permissions for this request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Insufficient permissions for this request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Insufficient permissions for this request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/all-for-year/employee-id": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets all Pay Statements for a year for an employee",
          "parameters": [
            {
              "name": "employeeId",
              "in": "query",
              "description": "Employee Id",
              "schema": {
                "type": "string"
              },
              "example": "JSmith6"
            },
            {
              "name": "checkYear",
              "in": "query",
              "description": "Check Year",
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 2020
            },
            {
              "name": "showUnapproved",
              "in": "query",
              "description": "Flag indicating whether to show unapproved pay statements",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "showBeforeAvailable",
              "in": "query",
              "description": "Flag indicating whether to show pay statements that are not available",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.0963194-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.0963532-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"140.00","totalYTDEarnings":"5560.00"},"checkDate":"2022-01-05T11:30:06.0963539-05:00","voidTimestamp":"2022-01-02T11:30:06.0963542-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.0963194-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.0963532-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"140.00","totalYTDEarnings":"5560.00"},"checkDate":"2022-01-05T11:30:06.0963539-05:00","voidTimestamp":"2022-01-02T11:30:06.0963542-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.0963194-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.0963532-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"140.00","totalYTDEarnings":"5560.00"},"checkDate":"2022-01-05T11:30:06.0963539-05:00","voidTimestamp":"2022-01-02T11:30:06.0963542-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Insufficient permissions for this request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Insufficient permissions for this request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Insufficient permissions for this request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/all-for-year/employee-id/details": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets all Pay Statements with additional details for a year for an employee",
          "parameters": [
            {
              "name": "employeeId",
              "in": "query",
              "description": "Employee Id",
              "schema": {
                "type": "string"
              },
              "example": "JSmith6"
            },
            {
              "name": "checkYear",
              "in": "query",
              "description": "Check Year",
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 2020
            },
            {
              "name": "showUnapproved",
              "in": "query",
              "description": "Flag indicating whether to show unapproved pay statements",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "showBeforeAvailable",
              "in": "query",
              "description": "Flag indicating whether to show pay statements that are not available",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2021-12-23T11:30:06.097403-05:00","checkNumber":"998","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/9/2021 11:30:06 AM","periodEnd":"12/23/2021 11:30:06 AM","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2022-01-06T11:30:06.0974588-05:00","checkNumber":"999","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/23/2021 11:30:06 AM","periodEnd":"1/6/2022 11:30:06 AM","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2022-01-06T11:30:06.0974608-05:00","voidTimestamp":"2022-01-06T11:30:06.0974611-05:00","checkNumber":"1999","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/23/2021 11:30:06 AM","periodEnd":"1/6/2022 11:30:06 AM","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2021-12-23T11:30:06.097403-05:00","checkNumber":"998","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/9/2021 11:30:06 AM","periodEnd":"12/23/2021 11:30:06 AM","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2022-01-06T11:30:06.0974588-05:00","checkNumber":"999","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/23/2021 11:30:06 AM","periodEnd":"1/6/2022 11:30:06 AM","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2022-01-06T11:30:06.0974608-05:00","voidTimestamp":"2022-01-06T11:30:06.0974611-05:00","checkNumber":"1999","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/23/2021 11:30:06 AM","periodEnd":"1/6/2022 11:30:06 AM","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2021-12-23T11:30:06.097403-05:00","checkNumber":"998","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/9/2021 11:30:06 AM","periodEnd":"12/23/2021 11:30:06 AM","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2022-01-06T11:30:06.0974588-05:00","checkNumber":"999","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/23/2021 11:30:06 AM","periodEnd":"1/6/2022 11:30:06 AM","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","companyId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","checkDate":"2022-01-06T11:30:06.0974608-05:00","voidTimestamp":"2022-01-06T11:30:06.0974611-05:00","checkNumber":"1999","grossPay":"100.00","netPay":"90.00","taxes":"5.00","deductions":"5.00","vacationBalance":"8","sickBalance":"8","periodBegin":"12/23/2021 11:30:06 AM","periodEnd":"1/6/2022 11:30:06 AM","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/all-for-year/companyuser-id": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets all Pay Statements for a year for an employee",
          "parameters": [
            {
              "name": "companyUserId",
              "in": "query",
              "description": "Unique identifier of employee",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            },
            {
              "name": "checkYear",
              "in": "query",
              "description": "Check Year",
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 2020
            },
            {
              "name": "showUnapproved",
              "in": "query",
              "description": "Flag indicating whether to show unapproved pay statements",
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "showBeforeAvailable",
              "in": "query",
              "description": "Flag indicating whether to show pay statements that are not available",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.0984266-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.0984305-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"140.00","totalYTDEarnings":"5560.00"},"checkDate":"2022-01-05T11:30:06.0984308-05:00","voidTimestamp":"2022-01-02T11:30:06.0984311-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.0984266-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.0984305-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"140.00","totalYTDEarnings":"5560.00"},"checkDate":"2022-01-05T11:30:06.0984308-05:00","voidTimestamp":"2022-01-02T11:30:06.0984311-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.0984266-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.0984305-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"140.00","totalYTDEarnings":"5560.00"},"checkDate":"2022-01-05T11:30:06.0984308-05:00","voidTimestamp":"2022-01-02T11:30:06.0984311-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    },
                    "Employee not found": {
                      "value": {"success":true,"message":"Employee not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/example-source-data": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets the default Xml for a pay statement upload file",
          "responses": {
            "200": {
              "description": "Returns the requested Xml data",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/samples": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets a list of the sample pay statement formats available",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":[{"name":"AA","description":"Test Sample"},{"name":"BB","description":"And another"}]}
                    },
                    "Not Found": {
                      "value": {"success":true,"message":"No Samples to retrieve","data":"[]"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":[{"name":"AA","description":"Test Sample"},{"name":"BB","description":"And another"}]}
                    },
                    "Not Found": {
                      "value": {"success":true,"message":"No Samples to retrieve","data":"[]"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":[{"name":"AA","description":"Test Sample"},{"name":"BB","description":"And another"}]}
                    },
                    "Not Found": {
                      "value": {"success":true,"message":"No Samples to retrieve","data":"[]"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/samples/pdf": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets a PDF file of the sample format",
          "parameters": [
            {
              "name": "sampleName",
              "in": "query",
              "description": "Name of Sample",
              "schema": {
                "type": "string"
              },
              "example": "Landscape format"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "default": "en-US"
              },
              "example": "en-US"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Pdf file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample name parameter": {
                      "value": {"success":false,"message":"A sample name must be provided"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample name parameter": {
                      "value": {"success":false,"message":"A sample name must be provided"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample name parameter": {
                      "value": {"success":false,"message":"A sample name must be provided"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/samples/thumbnail": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets an Image file of the sample format",
          "parameters": [
            {
              "name": "sampleName",
              "in": "query",
              "description": "Name of Sample",
              "schema": {
                "type": "string"
              },
              "example": "Landscape format"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "default": "en-US"
              },
              "example": "en-US"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Image file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample name parameter": {
                      "value": {"success":false,"message":"A sample name must be provided"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample name parameter": {
                      "value": {"success":false,"message":"A sample name must be provided"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample name parameter": {
                      "value": {"success":false,"message":"A sample name must be provided"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/upload/transform": {
        "post": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Uploads a custom Xslt",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Name of file",
              "schema": {
                "type": "string"
              },
              "example": "transform1"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "file": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Name missing or invalid": {
                      "value": {"success":false,"message":"Name is missing or contains invalid characters"}
                    },
                    "Missing or empty file": {
                      "value": {"success":false,"message":"Missing or empty file"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Name missing or invalid": {
                      "value": {"success":false,"message":"Name is missing or contains invalid characters"}
                    },
                    "Missing or empty file": {
                      "value": {"success":false,"message":"Missing or empty file"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Name missing or invalid": {
                      "value": {"success":false,"message":"Name is missing or contains invalid characters"}
                    },
                    "Missing or empty file": {
                      "value": {"success":false,"message":"Missing or empty file"}
                    },
                    "Invalid or unsupported culture": {
                      "value": {"success":false,"message":"Invalid or unsupported culture"}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/upload/source-data": {
        "post": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Upload an Xml file of Pay Statement data",
          "parameters": [
            {
              "name": "releaseDate",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "file": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Missing or empty file": {
                      "value": {"success":false,"message":"Missing or empty file"}
                    },
                    "Unable to parse date": {
                      "value": {"success":false,"message":"Unable to parse date"}
                    },
                    "Error processing": {
                      "value": {"success":false,"message":"Invalid Record","operationResults":[{"code":"Validation:Severe","message":"Line Number: 3 Description: Required paystub element is missing:  /*/emp_id/text()","type":4},{"code":"Validation:Severe","message":"Line Number: 7 Description: Required paystub element is missing:  /*/PAYGROUP_INFO/check_dt/text()","type":4}]}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Missing or empty file": {
                      "value": {"success":false,"message":"Missing or empty file"}
                    },
                    "Unable to parse date": {
                      "value": {"success":false,"message":"Unable to parse date"}
                    },
                    "Error processing": {
                      "value": {"success":false,"message":"Invalid Record","operationResults":[{"code":"Validation:Severe","message":"Line Number: 3 Description: Required paystub element is missing:  /*/emp_id/text()","type":4},{"code":"Validation:Severe","message":"Line Number: 7 Description: Required paystub element is missing:  /*/PAYGROUP_INFO/check_dt/text()","type":4}]}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Missing or empty file": {
                      "value": {"success":false,"message":"Missing or empty file"}
                    },
                    "Unable to parse date": {
                      "value": {"success":false,"message":"Unable to parse date"}
                    },
                    "Error processing": {
                      "value": {"success":false,"message":"Invalid Record","operationResults":[{"code":"Validation:Severe","message":"Line Number: 3 Description: Required paystub element is missing:  /*/emp_id/text()","type":4},{"code":"Validation:Severe","message":"Line Number: 7 Description: Required paystub element is missing:  /*/PAYGROUP_INFO/check_dt/text()","type":4}]}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/samples/transform": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets the Pay Statement Sample Xslt by sample name",
          "parameters": [
            {
              "name": "sampleFormatName",
              "in": "query",
              "description": "Name of sample",
              "schema": {
                "type": "string"
              },
              "example": "Landscape format"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Xslt data",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/samples/source-data": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets the Pay Statement Sample Xml by sample name",
          "parameters": [
            {
              "name": "sampleFormatName",
              "in": "query",
              "description": "Name of sample",
              "schema": {
                "type": "string"
              },
              "example": "Landscape format"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Xml data",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/assignment": {
        "post": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Assigns a Pay Statement Sample to the specified company",
          "parameters": [
            {
              "name": "sampleFormatName",
              "in": "query",
              "description": "Name of sample",
              "schema": {
                "type": "string"
              },
              "example": "Landscape format"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Selected Pay statement has been assigned to your company"}
                    },
                    "Not Found": {
                      "value": {"success":true,"message":"Sample not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Selected Pay statement has been assigned to your company"}
                    },
                    "Not Found": {
                      "value": {"success":true,"message":"Sample not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Selected Pay statement has been assigned to your company"}
                    },
                    "Not Found": {
                      "value": {"success":true,"message":"Sample not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Missing parameter"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/preview/pdf": {
        "post": {
          "tags": [
            "ClientAdmin"
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "xmlFile": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "xmlFile": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample Xml missing": {
                      "value": {"success":false,"message":"Sample Xml data must be provided"}
                    },
                    "Sample Xml invalid": {
                      "value": {"success":false,"message":"Invalid Sample Xml data"}
                    },
                    "Data issue": {
                      "value": {"success":false,"message":"No output version exists - please assign a format"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample Xml missing": {
                      "value": {"success":false,"message":"Sample Xml data must be provided"}
                    },
                    "Sample Xml invalid": {
                      "value": {"success":false,"message":"Invalid Sample Xml data"}
                    },
                    "Data issue": {
                      "value": {"success":false,"message":"No output version exists - please assign a format"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Sample Xml missing": {
                      "value": {"success":false,"message":"Sample Xml data must be provided"}
                    },
                    "Sample Xml invalid": {
                      "value": {"success":false,"message":"Invalid Sample Xml data"}
                    },
                    "Data issue": {
                      "value": {"success":false,"message":"No output version exists - please assign a format"}
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/upload/logo": {
        "post": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Upload a logo to appear on the Pay Statement",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logo": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "encoding": {
                  "logo": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":" Missing or Empty file"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":" Missing or Empty file"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":" Missing or Empty file"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/logo": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets the current logo for Pay Statements",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete","data":"{ requested data }"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/source-data/awaiting-approval": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets a list of pay statement files awaiting approval",
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":[{"fileLogId":"00000000-0000-0000-0000-000000000000","fileName":"File 1","processingOption":"Awaiting Client Approval","uploadDate":"2022-01-13T11:30:06.1096179-05:00"},{"fileLogId":"00000000-0000-0000-0000-000000000000","fileName":"File 2","processingOption":"Awaiting Client Approval","uploadDate":"2022-01-13T11:30:06.1096238-05:00"}]}
                    },
                    "Success - no files": {
                      "value": {"success":true,"message":"Success - no files","data":[]}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":[{"fileLogId":"00000000-0000-0000-0000-000000000000","fileName":"File 1","processingOption":"Awaiting Client Approval","uploadDate":"2022-01-13T11:30:06.1096179-05:00"},{"fileLogId":"00000000-0000-0000-0000-000000000000","fileName":"File 2","processingOption":"Awaiting Client Approval","uploadDate":"2022-01-13T11:30:06.1096238-05:00"}]}
                    },
                    "Success - no files": {
                      "value": {"success":true,"message":"Success - no files","data":[]}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":[{"fileLogId":"00000000-0000-0000-0000-000000000000","fileName":"File 1","processingOption":"Awaiting Client Approval","uploadDate":"2022-01-13T11:30:06.1096179-05:00"},{"fileLogId":"00000000-0000-0000-0000-000000000000","fileName":"File 2","processingOption":"Awaiting Client Approval","uploadDate":"2022-01-13T11:30:06.1096238-05:00"}]}
                    },
                    "Success - no files": {
                      "value": {"success":true,"message":"Success - no files","data":[]}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/source-data/{fileId}/details": {
        "get": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Gets the file details of an uploaded file",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "Unique identifier for file",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"Complete"}
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/source-data/{fileId}/approve": {
        "put": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Client approval for an uploaded Pay Statement file",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "Unique identifier for file",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File approved"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File approved"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File approved"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/admin/source-data/{fileId}/reject": {
        "put": {
          "tags": [
            "ClientAdmin"
          ],
          "summary": "Rejects an uploaded Pay Statement file",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "description": "Unique identifier for file",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File rejected"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File rejected"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":true,"message":"File rejected"}
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not in correct status"}
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"File not found"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/employee/most-recent": {
        "get": {
          "tags": [
            "Employee"
          ],
          "summary": "Gets most recent pay statement for employee",
          "parameters": [
            {
              "name": "localizeCulture",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string",
                "default": "en-US"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Pdf file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Unable to process request"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/employee/{paystatementId}": {
        "get": {
          "tags": [
            "Employee"
          ],
          "summary": "Gets a Pay Statement by Pay Statement Id",
          "parameters": [
            {
              "name": "paystatementId",
              "in": "path",
              "description": "Unique identifier for pay statement",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "schema": {
                "type": "string",
                "default": "en-US"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Pdf file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/employee/all-for-year": {
        "get": {
          "tags": [
            "Employee"
          ],
          "summary": "Gets all Pay Statements for a year for an employee",
          "parameters": [
            {
              "name": "checkYear",
              "in": "query",
              "description": "Check Year",
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 2020
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.1144896-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.114494-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"111.11","totalYTDEarnings":"222.00"},"checkDate":"2021-12-27T11:30:06.1144947-05:00","voidTimestamp":"2022-01-02T11:30:06.1144952-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.1144896-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.114494-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"111.11","totalYTDEarnings":"222.00"},"checkDate":"2021-12-27T11:30:06.1144947-05:00","voidTimestamp":"2022-01-02T11:30:06.1144952-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.1144896-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.114494-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"111.11","totalYTDEarnings":"222.00"},"checkDate":"2021-12-27T11:30:06.1144947-05:00","voidTimestamp":"2022-01-02T11:30:06.1144952-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                }
              }
            }
          }
        }
      },
      "/version": { 
        "get": {
          "tags": [
            "Payersion"
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ApiActionResult": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string",
              "nullable": true
            },
            "data": {
              "nullable": true
            },
            "operationResults": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OperationResult"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "OperationResult": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "nullable": true
            },
            "message": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/OperationResultType"
            }
          },
          "additionalProperties": false
        },
        "OperationResultType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ],
          "type": "integer",
          "format": "int32"
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "apiKey",
          "description": "JWT Authorization header using the Bearer scheme.",
          "name": "Authorization",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "Bearer": [ ]
      }
    ]
  }