{
    "openapi": "3.0.1",
    "info": {
      "title": "PayStatementService.API",
      "version": "1.0"
    },
    "servers": [
      {
        "url": "/paystatementsvc"
      }
    ],
    "paths": {
      "/api/v1/paystatement/employee/{paystatementId}": {
        "get": {
          "tags": [
            "Employee"
          ],
          "summary": "Gets a Pay Statement by Pay Statement Id",
          "parameters": [
            {
              "name": "paystatementId",
              "in": "path",
              "description": "Unique identifier for pay statement",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "11111111-2222-3333-4444-555555555555"
            },
            {
              "name": "localizeCulture",
              "in": "query",
              "schema": {
                "type": "string",
                "default": "en-US"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the requested Pdf file",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Complete","data":"{ requested data }"}
                    },
                    "Not found": {
                      "value": {"success":true,"message":"Not found"}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid or unsupported culture"}
                }
              }
            }
          }
        }
      },
      "/api/v1/paystatement/employee/all-for-year": {
        "get": {
          "tags": [
            "Employee"
          ],
          "summary": "Gets all Pay Statements for a year for an employee",
          "parameters": [
            {
              "name": "checkYear",
              "in": "query",
              "description": "Check Year",
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 2020
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.1144896-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.114494-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"111.11","totalYTDEarnings":"222.00"},"checkDate":"2021-12-27T11:30:06.1144947-05:00","voidTimestamp":"2022-01-02T11:30:06.1144952-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.1144896-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.114494-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"111.11","totalYTDEarnings":"222.00"},"checkDate":"2021-12-27T11:30:06.1144947-05:00","voidTimestamp":"2022-01-02T11:30:06.1144952-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "examples": {
                    "Success": {
                      "value": {"success":true,"message":"Pay Statements found : 3","data":[{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"400.00"},"checkDate":"2021-12-23T11:30:06.1144896-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"100.00","totalYTDEarnings":"500.00"},"checkDate":"2022-01-06T11:30:06.114494-05:00","void":false},{"payStatementId":"00000000-0000-0000-0000-000000000000","fileLogId":"00000000-0000-0000-0000-000000000000","companyUserId":"00000000-0000-0000-0000-000000000000","outputVersionId":"00000000-0000-0000-0000-000000000000","xmlData":"<G_EMP_DATA><RUN_ID>17574554</RUN_ID>...</G_EMP_DATA>","details":{"totalCurrentEarnings":"111.11","totalYTDEarnings":"222.00"},"checkDate":"2021-12-27T11:30:06.1144947-05:00","voidTimestamp":"2022-01-02T11:30:06.1144952-05:00","void":true}]}
                    },
                    "No pay statements found": {
                      "value": {"success":true,"message":"No pay statements found","data":[]}
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ApiActionResult"
                  },
                  "example": {"success":false,"message":"Invalid parameter value"}
                }
              }
            }
          }
        }
      },
      "/version": { 
        "get": {
          "tags": [
            "Version"
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ApiActionResult": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean"
            },
            "message": {
              "type": "string",
              "nullable": true
            },
            "data": {
              "nullable": true
            },
            "operationResults": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OperationResult"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "OperationResult": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "nullable": true
            },
            "message": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/OperationResultType"
            }
          },
          "additionalProperties": false
        },
        "OperationResultType": {
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ],
          "type": "integer",
          "format": "int32"
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "apiKey",
          "description": "JWT Authorization header using the Bearer scheme.",
          "name": "Authorization",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "Bearer": [ ]
      }
    ]
  }